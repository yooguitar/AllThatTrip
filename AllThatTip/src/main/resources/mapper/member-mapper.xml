<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kh.AllThatTrip.member.model.dao.MemberMapper"> 

<select id="login" parameterType="member" resultType="member">
	SELECT
		   USER_NO 	userNo,
		   USER_ID 	userId,
		   USER_PWD userPwd,
		   USER_NAME userName,
		   EMAIL,
		   PHONE,
		   SPAM,
		   STATUS,
		   ENROLL_DATE enrollDate
	  FROM
	  	   MEMBER
	 WHERE
	 	   STATUS = 'Y'
	   AND
	   	   USER_ID = #{userId}
</select>

<select id="deletedUser" parameterType="member" resultType="member">
	SELECT
		   USER_NO 	userNo,
		   USER_ID 	userId,
		   USER_PWD userPwd,
		   USER_NAME userName,
		   EMAIL,
		   PHONE,
		   SPAM,
		   STATUS,
		   ENROLL_DATE enrollDate
	  FROM
	  	   MEMBER
	 WHERE
	 	   STATUS = 'N'
	   AND
	   	   USER_ID = #{userId}
</select>


<insert id="join" parameterType="member">
	INSERT
	  INTO
	  	   MEMBER
	  	   (
	  	   USER_NO,
	  	   USER_ID,
	  	   USER_PWD,
	  	   USER_NAME,
	  	   EMAIL,
	  	   PHONE,
	  	   SPAM,
	  	   STATUS,
	  	   ENROLL_DATE
	  	   )
	VALUES
		   (
		   SEQ_UNO.NEXTVAL,
		   #{userId},
		   #{userPwd},
		   #{userName},
		   #{email},
		   #{phone},
		   #{spam},
		   DEFAULT,
		   DEFAULT
		   )

</insert>

<select id="checkId" resultType="_int">
	SELECT
		   COUNT(*)
      FROM	
           MEMBER
     WHERE
     	   USER_ID = #{userId}
       AND	
           STATUS = 'Y'
</select>

<update id="memberUpdate" parameterType="member">
	UPDATE
		   MEMBER
	   SET
	   	   USER_PWD = #{userPwd},
	   	   USER_NAME = #{userName},
	   	   EMAIL = #{email},
	   	   PHONE = #{phone},
		   SPAM = #{spam}
     WHERE
     	   USER_ID = #{userId}
       AND
       	   STATUS = 'Y'
</update>

<update id="memberDelete" parameterType="member">
	UPDATE
		   MEMBER
	   SET
	   	   STATUS = 'N'
	 WHERE	
	       USER_ID = #{userId}
</update>

<select id="findId" parameterType="String" resultType="String">
	SELECT
		   USER_ID 	userId
	  FROM	
	       MEMBER
	 WHERE
	 	   USER_NAME = #{userName}
	   AND
	       STATUS = 'Y'
</select>

<select id="findPwd" parameterType="member" resultType="member">
	SELECT
		   USER_ID 	userId,
		   USER_PWD userPwd,
		   USER_NAME userName,
		   EMAIL,
		   PHONE,
		   SPAM,
		   STATUS
	  FROM
	  	   MEMBER
	 WHERE
	   	   USER_ID = #{userId}
	   AND
	   	   EMAIL = #{email}
	   AND
	   	   STATUS = 'Y'	   
</select>

<!-- 	USER_NAME만 잘 반환되는 상태
<select id="findRsv" parameterType="member" resultType="String">
	SELECT
	       m.USER_NAME,
	       u.ROOM_NAME,
	       u.ROOM_PRICE,
	       u.ROOM_IMG
	  FROM
	       USER_RES_ROOM u
	  FULL
	 OUTER
	  JOIN
	       MEMBER m
	    ON
	       m.USER_ID = u.USER_ID
	 WHERE
	 	   u.USER_ID = #{userId}
	 ORDER
	    BY
	       RES_NO ASC
</select>
 -->


<!-- 찜, 예약, 장바구니 관련 -->
<!--  
<select id="findRsv" parameterType="member" resultMap="findRsvMap">
		SELECT
	       m.USER_NAME,
	       u.ROOM_NAME,
	       u.ROOM_PRICE,
	       u.ROOM_IMG
	  FROM
	       USER_RES_ROOM u
	  FULL
	 OUTER
	  JOIN
	       MEMBER m
	    ON
	       m.USER_ID = u.USER_ID
	 WHERE
	 	   u.USER_ID = #{userId}
	 ORDER
	    BY
	       RES_NO ASC
</select>

<resultMap id="findRsvMap" type="Rsvs">
	<id column="user_id" property="userId" />
	<result column="room_name" property="roomName" />
	<result column="room_price" property="roomPrice"/>
	<result column="romm_img" property="roomImg" />
	
	<collection column="user_id" javaType="java.util.list" ofType="Rsvs" property="rsvsList" select="" />
</resultMap>
-->









</mapper> 